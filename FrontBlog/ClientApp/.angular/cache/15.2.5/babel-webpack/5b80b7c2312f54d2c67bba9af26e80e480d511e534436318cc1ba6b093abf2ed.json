{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { GlobalVariables } from 'src/app/app.globals';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/app.functions\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function () {\n  return [\"/edit-post\"];\n};\nfunction AdminPanelComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h2\", 12);\n    i0.ɵɵlistener(\"click\", function AdminPanelComponent_div_14_Template_h2_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.sendIdToApi($event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 13)(10, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function AdminPanelComponent_div_14_Template_button_click_10_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.sendIdToApi($event));\n    });\n    i0.ɵɵtext(11, \"Update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function AdminPanelComponent_div_14_Template_button_click_12_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.deletePost($event));\n    });\n    i0.ɵɵtext(13, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const post_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", post_r2.id);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(9, _c0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(post_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.categorie);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(post_r2.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", post_r2.id);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(10, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", post_r2.id);\n  }\n}\nconst _c1 = function () {\n  return [\"/register-post\"];\n};\nexport class AdminPanelComponent {\n  constructor(http, router, loginService) {\n    this.http = http;\n    this.router = router;\n    this.loginService = loginService;\n    this.posts = [];\n    http.get(GlobalVariables.getAllPostsWithCategorieAndDateApiUrl).subscribe(data => {\n      this.posts = data;\n    }, error => console.log(error));\n  }\n  ngOnInit() {\n    this.loginService.checkIfUserIsLoggedIn();\n  }\n  onClickSubmit(data) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    var categoryObj = {\n      \"name\": data.category\n    };\n    if (categoryObj.name == '') {\n      alert('You must fill in the category field');\n    } else {\n      this.http.post(GlobalVariables.registerCategoryApiUrl, categoryObj, {\n        headers: headers\n      }).subscribe(res => {\n        alert(\"Category \" + data.category + \"Registered\");\n      });\n    }\n  }\n  sendIdToApi(event) {\n    var target = event.target || event.srcElement || event.currentTarget;\n    var idAttr = target.attributes.id;\n    var value = idAttr.nodeValue;\n    AdminPanelComponent.idPost = value;\n  }\n  deletePost(event) {\n    var target = event.target;\n    var valueAttr = target.attributes.value;\n    var valueButton = valueAttr.nodeValue;\n    this.http.delete(GlobalVariables.deletePostByIdApiUrl + valueButton).subscribe({\n      next: data => {\n        this.status = 'Delete successful';\n        alert(this.status);\n        window.location.reload();\n      },\n      error: error => {\n        this.errorMessage = error.message;\n        console.error('There was an error!', error);\n      }\n    });\n  }\n}\nAdminPanelComponent.idPost = 0;\nAdminPanelComponent.ɵfac = function AdminPanelComponent_Factory(t) {\n  return new (t || AdminPanelComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginService));\n};\nAdminPanelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminPanelComponent,\n  selectors: [[\"admin-panel\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[\"charset\", \"utf-8\"], [1, \"internalGrid\"], [1, \"categoryBox\"], [3, \"ngSubmit\"], [\"categoryId\", \"ngForm\"], [\"type\", \"text\", \"name\", \"category\", \"placeholder\", \"Category\", \"ngModel\", \"\"], [\"type\", \"submit\"], [1, \"\"], [1, \"postList\"], [\"class\", \"postListSinglePost\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-link\", \"text-dark\", 3, \"routerLink\"], [1, \"postListSinglePost\"], [3, \"routerLink\", \"id\", \"click\"], [1, \"postListSinglePostActions\"], [\"name\", \"deletePostButton\", 3, \"value\", \"click\"]],\n  template: function AdminPanelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r7 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"div\", 2)(7, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminPanelComponent_Template_form_ngSubmit_7_listener() {\n        i0.ɵɵrestoreView(_r7);\n        const _r0 = i0.ɵɵreference(8);\n        return i0.ɵɵresetView(ctx.onClickSubmit(_r0.value));\n      });\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵtext(11, \"Register\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(12, \"div\", 7);\n      i0.ɵɵelementStart(13, \"div\", 8);\n      i0.ɵɵtemplate(14, AdminPanelComponent_div_14_Template, 14, 11, \"div\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"a\", 10);\n      i0.ɵɵtext(16, \"New Post\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c1));\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i2.RouterLink],\n  styles: [\".categoryBox[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  width: 20%;\\r\\n}\\r\\n\\r\\n  .categoryBox[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    flex-direction: column;\\r\\n\\r\\n    padding: 10px;\\r\\n    border: 1px solid black;\\r\\n    border-radius: 5px;\\r\\n  }\\r\\n\\r\\n  .categoryBox[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{\\r\\n      margin-top: 5px;\\r\\n      border: 1px solid black;\\r\\n  }\\r\\n\\r\\n  .internalGrid[_ngcontent-%COMP%]{\\r\\n      padding: 10px;\\r\\n      border: 1px solid black;\\r\\n\\r\\n      display: flex;\\r\\n      justify-content: space-between;\\r\\n      flex-direction: row;\\r\\n  }\\r\\n\\r\\n  .postList[_ngcontent-%COMP%]{\\r\\n      background-color: lightgray;\\r\\n      padding: 10px;\\r\\n      width: 80%;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4tcGFuZWwvYWRtaW4tcGFuZWwuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLFVBQVU7QUFDWjs7RUFFRTtJQUNFLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsc0JBQXNCOztJQUV0QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtFQUNwQjs7RUFFQTtNQUNJLGVBQWU7TUFDZix1QkFBdUI7RUFDM0I7O0VBRUE7TUFDSSxhQUFhO01BQ2IsdUJBQXVCOztNQUV2QixhQUFhO01BQ2IsOEJBQThCO01BQzlCLG1CQUFtQjtFQUN2Qjs7RUFFQTtNQUNJLDJCQUEyQjtNQUMzQixhQUFhO01BQ2IsVUFBVTtFQUNkIiwic291cmNlc0NvbnRlbnQiOlsiLmNhdGVnb3J5Qm94IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHdpZHRoOiAyMCU7XHJcbn1cclxuXHJcbiAgLmNhdGVnb3J5Qm94IGZvcm0ge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuXHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgfVxyXG5cclxuICAuY2F0ZWdvcnlCb3ggZm9ybSBidXR0b257XHJcbiAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgICAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XHJcbiAgfVxyXG5cclxuICAuaW50ZXJuYWxHcmlke1xyXG4gICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuXHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICB9XHJcblxyXG4gIC5wb3N0TGlzdHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG4gICAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgICB3aWR0aDogODAlO1xyXG4gIH1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["HttpHeaders","GlobalVariables","i0","AdminPanelComponent","constructor","http","router","loginService","get","getAllPostsWithCategorieAndDateApiUrl","subscribe","data","posts","error","console","log","ngOnInit","checkIfUserIsLoggedIn","onClickSubmit","headers","append","categoryObj","category","name","alert","post","registerCategoryApiUrl","res","sendIdToApi","event","target","srcElement","currentTarget","idAttr","attributes","id","value","nodeValue","idPost","deletePost","valueAttr","valueButton","delete","deletePostByIdApiUrl","next","status","window","location","reload","errorMessage","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\admin-panel\\admin-panel.component.ts","C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\admin-panel\\admin-panel.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { GlobalVariables, Posts } from 'src/app/app.globals';\r\nimport { LoginService } from 'src/app/app.functions';\r\n\r\n@Component({\r\n  selector: 'admin-panel',\r\n  templateUrl: './admin-panel.html',\r\n  styleUrls: ['./admin-panel.css']\r\n})\r\n\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  public posts: Posts[] = [];\r\n  public static idPost: number = 0;\r\n  public status: any;\r\n  public errorMessage: any;  \r\n\r\n  constructor(private http: HttpClient, private router: Router, private loginService: LoginService) {\r\n    http.get<Posts[]>(GlobalVariables.getAllPostsWithCategorieAndDateApiUrl).subscribe(data => { this.posts = data; }, error => console.log(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginService.checkIfUserIsLoggedIn();\r\n  }\r\n\r\n  onClickSubmit(data: { category: string }) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    var categoryObj = {\r\n      \"name\": data.category,\r\n    }\r\n\r\n    if (categoryObj.name == '') {\r\n      alert('You must fill in the category field')\r\n    } else {\r\n      this.http.post(GlobalVariables.registerCategoryApiUrl, categoryObj, { headers: headers }).subscribe(res => { alert(\"Category \" + data.category + \"Registered\") });   \r\n    } \r\n  }\r\n\r\n  sendIdToApi(event: { target: any; srcElement: any; currentTarget: any; }) {\r\n    var target = event.target || event.srcElement || event.currentTarget;\r\n    var idAttr = target.attributes.id;\r\n    var value = idAttr.nodeValue;\r\n\r\n    AdminPanelComponent.idPost = value;\r\n  }\r\n\r\n  deletePost(event: {target: any;}) {\r\n    var target = event.target;\r\n    var valueAttr = target.attributes.value;\r\n    var valueButton = valueAttr.nodeValue;\r\n\r\n    this.http.delete(GlobalVariables.deletePostByIdApiUrl + valueButton)\r\n      .subscribe({\r\n        next: data => {\r\n          this.status = 'Delete successful';\r\n          alert(this.status);\r\n          window.location.reload();\r\n        },\r\n        error: error => {\r\n          this.errorMessage = error.message;\r\n          console.error('There was an error!', error);\r\n        }\r\n      });\r\n\r\n      \r\n  }\r\n}\r\n\r\n\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title></title>\r\n</head>\r\n\r\n<body>\r\n  <div class=\"internalGrid\">\r\n    <div class=\"categoryBox\">\r\n      <form #categoryId=\"ngForm\" (ngSubmit)=\"onClickSubmit(categoryId.value)\">\r\n        <input type=\"text\" name=\"category\" placeholder=\"Category\" ngModel>\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"\"></div>\r\n    <div class=\"postList\">\r\n      <div class=\"postListSinglePost\" *ngFor=\"let post of posts\" >\r\n        <h2  (click)=\"sendIdToApi($event)\" [routerLink]=\"['/edit-post']\" id=\"{{post.id}}\" >{{ post.title }}</h2>\r\n        <p >{{ post.description }}</p>\r\n        <p>{{ post.categorie }}</p>\r\n        <p>{{ post.date }}</p>\r\n        <div class=\"postListSinglePostActions\">\r\n          <button (click)=\"sendIdToApi($event)\" [routerLink]=\"['/edit-post']\" id=\"{{post.id}}\">Update</button>\r\n          <button name=\"deletePostButton\" value=\"{{post.id}}\" (click)=\"deletePost($event)\">Delete</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <a class=\"nav-link text-dark\" [routerLink]=\"['/register-post']\">New Post</a>\r\n\r\n  </div>\r\n</body>\r\n\r\n\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}