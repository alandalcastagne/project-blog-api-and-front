{"ast":null,"code":"var _class;\nvar AdminPanelComponent_1;\nimport { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nlet AdminPanelComponent = AdminPanelComponent_1 = (_class = class AdminPanelComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.posts = [];\n    http.get(AdminPanelComponent_1.UrlPosts).subscribe(data => {\n      this.posts = data;\n    }, error => console.log(error));\n  }\n  ngOnInit() {\n    var session = sessionStorage.getItem('logged');\n    if (session != 'true') {\n      alert(\"You need to Log in to use this page!\");\n      this.router.navigate(['/login-page']);\n    }\n  }\n  onClickSubmit(data) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    var urlPostCategory = \"https://localhost:7080/Category\";\n    var categoryObj = {\n      \"name\": data.category\n    };\n    this.http.post(urlPostCategory, categoryObj, {\n      headers: headers\n    }).subscribe(res => {\n      alert(\"Categoria \" + data.category + \" Registrada com sucesso!\");\n    });\n  }\n  sendIdToApi(event) {\n    var target = event.target || event.srcElement || event.currentTarget;\n    var idAttr = target.attributes.id;\n    var value = idAttr.nodeValue;\n    AdminPanelComponent_1.idPost = value;\n  }\n  deletePost(postId) {\n    const now = new Date();\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    var urlDelete = \"https://localhost:7080/Post/DeletePostById?id=\" + postId;\n    this.http.delete(urlDelete, {\n      headers: headers\n    });\n  }\n}, _class.idPost = 0, _class.Url = 'https://localhost:7080/User/', _class.UrlPosts = 'https://localhost:7080/Post/GetAllPostsWithCategorieAndDate', _class.UrlPostById = 'https://localhost:7080/Post/GetById?id=', _class);\nAdminPanelComponent = AdminPanelComponent_1 = __decorate([Component({\n  selector: 'admin-panel',\n  templateUrl: './admin-panel.html',\n  styleUrls: ['./admin-panel.css']\n})], AdminPanelComponent);\nexport { AdminPanelComponent };","map":{"version":3,"mappings":";;;AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,SAAS,QAAgB,eAAe;AAY1C,IAAMC,mBAAmB,qCAAzB,MAAMA,mBAAmB;EAS9BC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAP7C,UAAK,GAAY,EAAE;IAQxBD,IAAI,CAACE,GAAG,CAAUC,qBAAmB,CAACC,QAAQ,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAAG,IAAI,CAACC,KAAK,GAAGD,IAAI;IAAE,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACxH;EAEAG,QAAQ;IACN,IAAIC,OAAO,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC9C,IAAIF,OAAO,IAAI,MAAM,EAAE;MACrBG,KAAK,CAAC,sCAAsC,CAAC;MAC7C,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;;EAEzC;EAIAC,aAAa,CAACX,IAA0B;IACtC,IAAIY,OAAO,GAAG,IAAItB,WAAW,EAAE;IAC/BsB,OAAO,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAClD,IAAIC,eAAe,GAAG,iCAAiC;IACvD,IAAIC,WAAW,GAAG;MAChB,MAAM,EAAEf,IAAI,CAACgB;KACd;IAGD,IAAI,CAACtB,IAAI,CAACuB,IAAI,CAACH,eAAe,EAAEC,WAAW,EAAE;MAAEH,OAAO,EAAEA;IAAO,CAAE,CAAC,CAACb,SAAS,CAACmB,GAAG,IAAG;MAAGT,KAAK,CAAC,YAAY,GAAGT,IAAI,CAACgB,QAAQ,GAAG,0BAA0B,CAAC;IAAC,CAAC,CAAC;EAE3J;EAEAG,WAAW,CAACC,KAA4D;IACtE,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM,IAAID,KAAK,CAACE,UAAU,IAAIF,KAAK,CAACG,aAAa;IACpE,IAAIC,MAAM,GAAGH,MAAM,CAACI,UAAU,CAACC,EAAE;IACjC,IAAIC,KAAK,GAAGH,MAAM,CAACI,SAAS;IAE5B/B,qBAAmB,CAACgC,MAAM,GAAGF,KAAK;EACpC;EAEAG,UAAU,CAACC,MAAc;IACvB,MAAMC,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAIrB,OAAO,GAAG,IAAItB,WAAW,EAAE;IAC/BsB,OAAO,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAElD,IAAIqB,SAAS,GAAG,gDAAgD,GAAGH,MAAM;IAEzE,IAAI,CAACrC,IAAI,CAACyC,MAAM,CAACD,SAAS,EAAE;MAACtB,OAAO,EAAEA;IAAO,CAAE,CAAC;EAElD;GAlDc,aAAM,GAAW,CAAC,EAElB,UAAG,GAAW,8BAA8B,EAC5C,eAAQ,GAAW,6DAA6D,EAChF,kBAAW,GAAW,yCAAyC;AAPlEpB,mBAAmB,uCAP/BD,SAAS,CAAC;EACT6C,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,oBAAoB;EACjCC,SAAS,EAAE,CAAC,mBAAmB;CAChC,CAAC,GAGW9C,mBAAmB,CAsD/B;SAtDYA,mBAAmB","names":["HttpHeaders","Component","AdminPanelComponent","constructor","http","router","get","AdminPanelComponent_1","UrlPosts","subscribe","data","posts","error","console","log","ngOnInit","session","sessionStorage","getItem","alert","navigate","onClickSubmit","headers","append","urlPostCategory","categoryObj","category","post","res","sendIdToApi","event","target","srcElement","currentTarget","idAttr","attributes","id","value","nodeValue","idPost","deletePost","postId","now","Date","urlDelete","delete","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\admin-panel\\admin-panel.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'admin-panel',\r\n  templateUrl: './admin-panel.html',\r\n  styleUrls: ['./admin-panel.css']\r\n})\r\n\r\n\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  public posts: Posts[] = [];\r\n  public static idPost: number = 0;\r\n\r\n  public static Url: string = 'https://localhost:7080/User/';\r\n  public static UrlPosts: string = 'https://localhost:7080/Post/GetAllPostsWithCategorieAndDate';\r\n  public static UrlPostById: string = 'https://localhost:7080/Post/GetById?id=';\r\n \r\n  constructor(private http: HttpClient, private router: Router) {\r\n    http.get<Posts[]>(AdminPanelComponent.UrlPosts).subscribe(data => { this.posts = data; }, error => console.log(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    var session = sessionStorage.getItem('logged');\r\n    if (session != 'true') {\r\n      alert(\"You need to Log in to use this page!\");\r\n      this.router.navigate(['/login-page']);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  onClickSubmit(data: { category: string }) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    var urlPostCategory = \"https://localhost:7080/Category\"\r\n    var categoryObj = {\r\n      \"name\": data.category,\r\n    }\r\n\r\n\r\n    this.http.post(urlPostCategory, categoryObj, { headers: headers }).subscribe(res => { alert(\"Categoria \" + data.category + \" Registrada com sucesso!\") });\r\n    \r\n  }\r\n\r\n  sendIdToApi(event: { target: any; srcElement: any; currentTarget: any; }) {\r\n    var target = event.target || event.srcElement || event.currentTarget;\r\n    var idAttr = target.attributes.id;\r\n    var value = idAttr.nodeValue;\r\n\r\n    AdminPanelComponent.idPost = value;\r\n  }\r\n\r\n  deletePost(postId: number) {\r\n    const now = new Date();\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    var urlDelete = \"https://localhost:7080/Post/DeletePostById?id=\" + postId;\r\n\r\n    this.http.delete(urlDelete, {headers: headers });\r\n\r\n  }\r\n}\r\n\r\ninterface Posts {\r\n  title: string;\r\n  description: string;\r\n  date: string;\r\n  categorie: string;\r\n  id: number;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}