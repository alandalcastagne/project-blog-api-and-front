{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { GlobalVariables } from 'src/app/app.globals';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/app.functions\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction RegisterPostComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const categorie_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", categorie_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", categorie_r2.name, \" \");\n  }\n}\nexport class RegisterPostComponent {\n  constructor(http, loginService, router) {\n    this.http = http;\n    this.loginService = loginService;\n    this.router = router;\n    this.categories = [];\n    http.get(GlobalVariables.getAllCategoriesApiUrl).subscribe(data => {\n      this.categories = data;\n    }, error => console.log(error));\n  }\n  ngOnInit() {\n    this.loginService.checkIfUserIsLoggedIn();\n  }\n  onClickSubmit(data) {\n    const now = new Date();\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    var postObj = {\n      \"title\": data.title,\n      \"description\": data.description,\n      \"date\": now.toLocaleDateString(),\n      \"categoryFK\": data.categoryFK\n    };\n    if (postObj.title == '' || postObj.description == '' || postObj.categoryFK == null) {\n      alert('All fields must be filled');\n    } else {\n      this.http.post(GlobalVariables.registerPostApiUrl, postObj, {\n        headers: headers\n      }).subscribe(res => {\n        alert(\"Post \" + data.title + \" Registered!\");\n      });\n    }\n  }\n}\nRegisterPostComponent.ɵfac = function RegisterPostComponent_Factory(t) {\n  return new (t || RegisterPostComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterPostComponent,\n  selectors: [[\"register-post\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[\"charset\", \"utf-8\"], [1, \"boxPostData\"], [3, \"ngSubmit\"], [\"postId\", \"ngForm\"], [\"type\", \"text\", \"name\", \"title\", \"placeholder\", \"Title\", \"ngModel\", \"\"], [\"name\", \"description\", \"ngModel\", \"\"], [\"name\", \"categoryFK\", \"ngModel\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"button-submit-new-post\"], [3, \"value\"]],\n  template: function RegisterPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterPostComponent_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.onClickSubmit(_r0.value));\n      });\n      i0.ɵɵelementStart(8, \"h3\");\n      i0.ɵɵtext(9, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementStart(11, \"h3\");\n      i0.ɵɵtext(12, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"textarea\", 5);\n      i0.ɵɵelementStart(14, \"h3\");\n      i0.ɵɵtext(15, \"Category\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 6);\n      i0.ɵɵtemplate(17, RegisterPostComponent_option_17_Template, 2, 2, \"option\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 8);\n      i0.ɵɵtext(19, \"Submit\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXItcG9zdC9yZWdpc3Rlci1wb3N0LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,eAAe,QAAoB,qBAAqB;;;;;;;;;ICazDC,iCAAsE;IAACA,YAAqB;IAAAA,iBAAS;;;;IAAxDA,kDAAwB;IAAEA,eAAqB;IAArBA,kDAAqB;;;ADFpG,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB,EAAUC,YAA0B,EAAUC,MAAc;IAA5E,SAAI,GAAJF,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAAwB,WAAM,GAANC,MAAM;IAFhF,eAAU,GAAiB,EAAE;IAGnCF,IAAI,CAACG,GAAG,CAAeP,eAAe,CAACQ,sBAAsB,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAAG,IAAI,CAACC,UAAU,GAAGD,IAAI;IAAE,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC5I;EAEAG,QAAQ;IACN,IAAI,CAACV,YAAY,CAACW,qBAAqB,EAAE;EAC3C;EAEAC,aAAa,CAACP,IAAgE;IAC5E,MAAMQ,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAIC,OAAO,GAAG,IAAIrB,WAAW,EAAE;IAC/BqB,OAAO,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAClD,IAAIC,OAAO,GAAG;MACZ,OAAO,EAAEZ,IAAI,CAACa,KAAK;MACnB,aAAa,EAAEb,IAAI,CAACc,WAAW;MAC/B,MAAM,EAAEN,GAAG,CAACO,kBAAkB,EAAE;MAChC,YAAY,EAAEf,IAAI,CAACgB;KACpB;IAED,IAAIJ,OAAO,CAACC,KAAK,IAAI,EAAE,IAAID,OAAO,CAACE,WAAW,IAAI,EAAE,IAAIF,OAAO,CAACI,UAAU,IAAI,IAAI,EAAE;MAClFC,KAAK,CAAC,2BAA2B,CAAC;KACnC,MAAM;MACL,IAAI,CAACvB,IAAI,CAACwB,IAAI,CAAC5B,eAAe,CAAC6B,kBAAkB,EAAEP,OAAO,EAAE;QAAEF,OAAO,EAAEA;MAAO,CAAE,CAAC,CAACX,SAAS,CAACqB,GAAG,IAAG;QAAGH,KAAK,CAAC,OAAO,GAAGjB,IAAI,CAACa,KAAK,GAAG,cAAc,CAAC;MAAC,CAAC,CAAC;;EAGxJ;;AA5BWrB,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCblClC,4BAAM;MAEFA,0BAAwB;MAE5BA,iBAAO;MACPA,4BAAM;MAGqBA;QAAAA;QAAA;QAAA,OAAYA,2CAA2B;MAAA,EAAC;MAC7DA,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,4BAA8D;MAC9DA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MACpBA,+BAAgD;MAChDA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MACjBA,kCAAkC;MAChCA,8EAAqG;MACvGA,iBAAS;MACTA,kCAAqD;MAAAA,uBAAM;MAAAA,iBAAS;;;MAFpCA,gBAAa;MAAbA,wCAAa","names":["HttpHeaders","GlobalVariables","i0","RegisterPostComponent","constructor","http","loginService","router","get","getAllCategoriesApiUrl","subscribe","data","categories","error","console","log","ngOnInit","checkIfUserIsLoggedIn","onClickSubmit","now","Date","headers","append","postObj","title","description","toLocaleDateString","categoryFK","alert","post","registerPostApiUrl","res","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\register-post\\register-post.component.ts","C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\register-post\\register-post.html"],"sourcesContent":["import { getLocaleDateTimeFormat } from '@angular/common';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { GlobalVariables, Categories } from 'src/app/app.globals';\r\nimport { LoginService } from 'src/app/app.functions';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'register-post',\r\n  templateUrl: './register-post.html',\r\n  styleUrls: ['./register-post.css']\r\n})\r\n\r\nexport class RegisterPostComponent {\r\n   public categories: Categories[] = [];\r\n\r\n  constructor(private http: HttpClient, private loginService: LoginService, private router: Router) {\r\n    http.get<Categories[]>(GlobalVariables.getAllCategoriesApiUrl).subscribe(data => { this.categories = data; }, error => console.log(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginService.checkIfUserIsLoggedIn();\r\n  }\r\n\r\n  onClickSubmit(data: { title: string, description: string, categoryFK: number }) {\r\n    const now = new Date();\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    var postObj = {\r\n      \"title\": data.title,\r\n      \"description\": data.description,\r\n      \"date\": now.toLocaleDateString(),\r\n      \"categoryFK\": data.categoryFK\r\n    }\r\n\r\n    if (postObj.title == '' || postObj.description == '' || postObj.categoryFK == null) {\r\n      alert('All fields must be filled')\r\n    } else {\r\n      this.http.post(GlobalVariables.registerPostApiUrl, postObj, { headers: headers }).subscribe(res => { alert(\"Post \" + data.title + \" Registered!\") });\r\n    }\r\n \r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n\r\n  <div class=\"boxPostData\">\r\n    <form #postId=\"ngForm\" (ngSubmit)=\"onClickSubmit(postId.value)\">\r\n      <h3>Title</h3>\r\n      <input type=\"text\" name=\"title\" placeholder=\"Title\" ngModel />\r\n      <h3>Description</h3>\r\n      <textarea name=\"description\" ngModel></textarea>\r\n      <h3>Category</h3>\r\n      <select name=\"categoryFK\" ngModel>\r\n        <option *ngFor=\"let categorie of categories\" value=\"{{categorie.id}}\"> {{ categorie.name }} </option>\r\n      </select>\r\n      <button class=\"button-submit-new-post\" type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n\r\n \r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}