{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AdminPanelComponent } from '../admin-panel/admin-panel.component';\nimport { GlobalVariables } from 'src/app/app.globals';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"src/app/app.functions\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class EditPostComponent {\n  constructor(http, loginService, router) {\n    this.http = http;\n    this.loginService = loginService;\n    this.router = router;\n    this.categories = [];\n    this.PostId = 0;\n    http.get(GlobalVariables.getAllCategoriesApiUrl).subscribe(data => {\n      this.categories = data;\n    }, error => console.log(error));\n    this.PostId = AdminPanelComponent.idPost;\n  }\n  ngOnInit() {\n    this.loginService.checkIfUserIsLoggedIn();\n    this.getPostById().subscribe(data => this.post = {\n      id: data.id,\n      title: data.title,\n      description: data.description,\n      date: data.date,\n      categoryFK: data.categoryFK,\n      category: data.category\n    });\n  }\n  getPostById() {\n    return this.http.get(GlobalVariables.getPostByIdApiUrl + this.PostId);\n  }\n  onClickSubmit(data) {\n    const now = new Date();\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    var putObj = {\n      \"title\": data.title,\n      \"description\": data.description,\n      \"date\": now.toLocaleDateString()\n    };\n    this.http.put(GlobalVariables.editPostByIdApiUrl + this.PostId, putObj, {\n      headers: headers\n    }).subscribe(res => {\n      alert(\"Post \" + this.post?.title + \"Edited!\"), this.router.navigate(['/admin-panel']);\n    });\n  }\n}\nEditPostComponent.ɵfac = function EditPostComponent_Factory(t) {\n  return new (t || EditPostComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.Router));\n};\nEditPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditPostComponent,\n  selectors: [[\"edit-post\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[\"charset\", \"utf-8\"], [3, \"ngSubmit\"], [\"postId\", \"ngForm\"], [\"type\", \"text\", \"name\", \"title\", \"placeholder\", \"Title\", \"ngModel\", \"\", 3, \"value\"], [\"name\", \"description\", \"ngModel\", \"\", 3, \"value\"], [\"type\", \"submit\"]],\n  template: function EditPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EditPostComponent_Template_form_ngSubmit_5_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(6);\n        return i0.ɵɵresetView(ctx.onClickSubmit(_r0.value));\n      });\n      i0.ɵɵelementStart(7, \"h3\");\n      i0.ɵɵtext(8, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵelementStart(10, \"h3\");\n      i0.ɵɵtext(11, \" Description \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"textarea\", 4)(13, \"br\");\n      i0.ɵɵelementStart(14, \"button\", 5);\n      i0.ɵɵtext(15, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.post == null ? null : ctx.post.title);\n      i0.ɵɵadvance(3);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.post == null ? null : ctx.post.description);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"body[_ngcontent-%COMP%] {\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZWRpdC1wb3N0L2VkaXQtcG9zdC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAoB,sBAAsB;AAE1E,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,eAAe,QAA0B,qBAAqB;;;;;;AAWvE,OAAM,MAAOC,iBAAiB;EAO5BC,YAAoBC,IAAgB,EAAUC,YAA0B,EAAUC,MAAc;IAA5E,SAAI,GAAJF,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAAwB,WAAM,GAANC,MAAM;IAJjF,eAAU,GAAiB,EAAE;IAC7B,WAAM,GAAW,CAAC;IAIvBF,IAAI,CAACG,GAAG,CAAeN,eAAe,CAACO,sBAAsB,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAAG,IAAI,CAACC,UAAU,GAAGD,IAAI;IAAE,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;IAC1I,IAAI,CAACG,MAAM,GAAGf,mBAAmB,CAACgB,MAAM;EAC1C;EAEAC,QAAQ;IACN,IAAI,CAACZ,YAAY,CAACa,qBAAqB,EAAE;IAEzC,IAAI,CAACC,WAAW,EAAE,CAACV,SAAS,CAAEC,IAAU,IAAK,IAAI,CAACU,IAAI,GAAG;MACvDC,EAAE,EAAEX,IAAI,CAACW,EAAE;MACXC,KAAK,EAAEZ,IAAI,CAACY,KAAK;MACjBC,WAAW,EAAEb,IAAI,CAACa,WAAW;MAC7BC,IAAI,EAAEd,IAAI,CAACc,IAAI;MACfC,UAAU,EAAEf,IAAI,CAACe,UAAU;MAC3BC,QAAQ,EAAEhB,IAAI,CAACgB;KAChB,CAAC;EACJ;EAEAP,WAAW;IACT,OAAO,IAAI,CAACf,IAAI,CAACG,GAAG,CAAON,eAAe,CAAC0B,iBAAiB,GAAG,IAAI,CAACZ,MAAM,CAAC;EAC7E;EAEAa,aAAa,CAAClB,IAAgE;IAC5E,MAAMmB,GAAG,GAAG,IAAIC,IAAI,EAAE;IACtB,IAAIC,OAAO,GAAG,IAAIhC,WAAW,EAAE;IAC/BgC,OAAO,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAElD,IAAIC,MAAM,GAAG;MACX,OAAO,EAAEvB,IAAI,CAACY,KAAK;MACnB,aAAa,EAAEZ,IAAI,CAACa,WAAW;MAC/B,MAAM,EAAEM,GAAG,CAACK,kBAAkB;KAC/B;IAED,IAAI,CAAC9B,IAAI,CAAC+B,GAAG,CAAClC,eAAe,CAACmC,kBAAkB,GAAG,IAAI,CAACrB,MAAM,EAAEkB,MAAM,EAAE;MAAEF,OAAO,EAAEA;IAAO,CAAE,CAAC,CAACtB,SAAS,CAAC4B,GAAG,IAAG;MAE5GC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAClB,IAAI,EAAEE,KAAK,GAAG,SAAS,CAAC,EAC9C,IAAI,CAAChB,MAAM,CAACiC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;IACvC,CAAC,CAAC;EACJ;;AA7CWrC,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAsC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCb9BC,4BAAM;MAEJA,0BAAwB;MAE1BA,iBAAO;MACPA,4BAAM;MACmBA;QAAAA;QAAA;QAAA,OAAYA,2CAA2B;MAAA,EAAC;MAC7DA,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,2BAAsF;MACtFA,2BAAI;MACFA,8BACF;MAAAA,iBAAK;MACLA,+BAA8E;MAG9EA,kCAAsB;MAAAA,uBAAM;MAAAA,iBAAS;;;MAPeA,eAAuB;MAAvBA,2EAAuB;MAI9CA,eAA6B;MAA7BA,iFAA6B","names":["HttpHeaders","AdminPanelComponent","GlobalVariables","EditPostComponent","constructor","http","loginService","router","get","getAllCategoriesApiUrl","subscribe","data","categories","error","console","log","PostId","idPost","ngOnInit","checkIfUserIsLoggedIn","getPostById","post","id","title","description","date","categoryFK","category","getPostByIdApiUrl","onClickSubmit","now","Date","headers","append","putObj","toLocaleDateString","put","editPostByIdApiUrl","res","alert","navigate","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\edit-post\\edit-post.component.ts","C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\edit-post\\edit-post.html"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Component, Injectable } from '@angular/core';\r\nimport { AdminPanelComponent } from '../admin-panel/admin-panel.component';\r\nimport { GlobalVariables, Categories, Post } from 'src/app/app.globals';\r\nimport { LoginService } from 'src/app/app.functions';\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'edit-post',\r\n  templateUrl: './edit-post.html',\r\n  styleUrls: ['./edit-post.css']\r\n})\r\n\r\nexport class EditPostComponent {\r\n\r\n  post: Post | undefined;\r\n  public categories: Categories[] = [];\r\n  public PostId: number = 0;\r\n\r\n\r\n  constructor(private http: HttpClient, private loginService: LoginService, private router: Router) {\r\n    http.get<Categories[]>(GlobalVariables.getAllCategoriesApiUrl).subscribe(data => { this.categories = data; }, error => console.log(error));\r\n    this.PostId = AdminPanelComponent.idPost;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginService.checkIfUserIsLoggedIn();\r\n\r\n    this.getPostById().subscribe((data: Post) => this.post = {\r\n      id: data.id,\r\n      title: data.title,\r\n      description: data.description,\r\n      date: data.date,\r\n      categoryFK: data.categoryFK,\r\n      category: data.category,\r\n    });\r\n  }\r\n\r\n  getPostById() {\r\n    return this.http.get<Post>(GlobalVariables.getPostByIdApiUrl + this.PostId);\r\n  }\r\n\r\n  onClickSubmit(data: { title: string, description: string, categoryFK: number }) {\r\n    const now = new Date();\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    var putObj = {\r\n      \"title\": data.title,\r\n      \"description\": data.description,\r\n      \"date\": now.toLocaleDateString()\r\n    }\r\n\r\n    this.http.put(GlobalVariables.editPostByIdApiUrl + this.PostId, putObj, { headers: headers }).subscribe(res =>\r\n    {\r\n      alert(\"Post \" + this.post?.title + \"Edited!\"),\r\n     this.router.navigate(['/admin-panel'])\r\n    })\r\n  }\r\n}\r\n\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <title></title>\r\n</head>\r\n<body>\r\n  <form #postId=\"ngForm\" (ngSubmit)=\"onClickSubmit(postId.value)\">\r\n    <h3>Title</h3>\r\n    <input type=\"text\" name=\"title\" placeholder=\"Title\" value=\"{{post?.title}}\" ngModel />\r\n    <h3>\r\n      Description\r\n    </h3>\r\n    <textarea name=\"description\" value=\"{{post?.description}}\" ngModel></textarea>\r\n    <br />\r\n\r\n    <button type=\"submit\">Submit</button>\r\n  </form>\r\n\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}