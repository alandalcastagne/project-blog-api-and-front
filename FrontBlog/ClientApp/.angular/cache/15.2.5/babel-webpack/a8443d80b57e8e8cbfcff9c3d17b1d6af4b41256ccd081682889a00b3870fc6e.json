{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/aland/source/repos/ProjetoBlog/FrontBlog/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { baseApiUrls } from 'src/app/app.globals';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginPageComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  dataSave(message) {\n    sessionStorage.setItem('logged', 'true');\n    alert('Welcome! ' + message);\n    this.router.navigate(['/admin-panel']);\n  }\n  onClickSubmit(data) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (data.login == '' || data.password == '') {\n        alert('The login and password field must be filled in');\n      } else {\n        let loginUrl = baseApiUrls.baseApiurlUser + data.login + '/' + data.password;\n        yield _this.http.get(loginUrl).subscribe(data => _this.dataSave(data), error => alert('User not found'));\n      }\n    })();\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"login-page\"]],\n  decls: 14,\n  vars: 0,\n  consts: [[\"charset\", \"utf-8\"], [1, \"loginBox\"], [3, \"ngSubmit\"], [\"userlogin\", \"ngForm\"], [\"type\", \"text\", \"name\", \"login\", \"placeholder\", \"Login\", \"ngModel\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"ngModel\", \"\"], [\"type\", \"submit\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"h1\");\n      i0.ɵɵtext(7, \"Project Blog\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_8_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(9);\n        return i0.ɵɵresetView(ctx.onClickSubmit(_r0.value));\n      });\n      i0.ɵɵelement(10, \"input\", 4)(11, \"input\", 5);\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵtext(13, \"LOGIN\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 775:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(9:25) C:\\\\\\\\Users\\\\\\\\aland\\\\\\\\source\\\\\\\\repos\\\\\\\\ProjetoBlog\\\\\\\\FrontBlog\\\\\\\\ClientApp\\\\\\\\src\\\\\\\\app\\\\\\\\login-page\\\\\\\\login-page.css Missed semicolon\\\\n\\\\n \\\\u001b[90m  7 | \\\\u001b[39m  display\\\\u001b[33m:\\\\u001b[39m flex\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m  8 | \\\\u001b[39m  justify-content\\\\u001b[33m:\\\\u001b[39m center\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m  9 | \\\\u001b[39m  flex-direction\\\\u001b[33m:\\\\u001b[39m column\\\\n \\\\u001b[90m    | \\\\u001b[39m                        \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 10 | \\\\u001b[39m  align-items\\\\u001b[33m:\\\\u001b[39m center\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 11 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n \\t\\n \\t//[_ngcontent-%COMP%]   startup[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n \\t__webpack_modules__[775]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=login-page.css.map*/\"]\n});","map":{"version":3,"mappings":";AAGA,SAASA,WAAW,QAAQ,qBAAqB;;;;;AAOjD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;EAAY;EAEhEC,QAAQ,CAACC,OAAe;IACtBC,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;IACxCC,KAAK,CAAC,WAAW,GAAGH,OAAO,CAAC;IAC5B,IAAI,CAACF,MAAM,CAACM,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;EAEMC,aAAa,CAACC,IAAyC;IAAA;IAAA;MAC3D,IAAIA,IAAI,CAACC,KAAK,IAAI,EAAE,IAAID,IAAI,CAACE,QAAQ,IAAI,EAAE,EAAE;QAC3CL,KAAK,CAAC,gDAAgD,CAAC;OACxD,MAAM;QACL,IAAIM,QAAQ,GAAWf,WAAW,CAACgB,cAAc,GAAGJ,IAAI,CAACC,KAAK,GAAG,GAAG,GAAGD,IAAI,CAACE,QAAQ;QACpF,MAAM,KAAI,CAACX,IAAI,CAACc,GAAG,CAACF,QAAQ,CAAC,CAACG,SAAS,CAACN,IAAI,IAAI,KAAI,CAACP,QAAQ,CAACO,IAAI,CAAC,EAAGO,KAAK,IAAIV,KAAK,CAAC,gBAAgB,CAAC,CAAE;;IACzG;EACH;;AAjBWR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCT/BC,4BAAM;MAEFA,0BAAwB;MAE5BA,iBAAO;MACPA,4BAAM;MAEEA,4BAAY;MAAAA,iBAAK;MACrBA,kCAAsE;MAA5CA;QAAAA;QAAA;QAAA,OAAYA,2CAA8B;MAAA,EAAC;MACnEA,4BAA4D;MAE5DA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS","names":["baseApiUrls","LoginPageComponent","constructor","http","router","dataSave","message","sessionStorage","setItem","alert","navigate","onClickSubmit","data","login","password","loginUrl","baseApiurlUser","get","subscribe","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\login-page\\login-page.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { baseApiUrls } from 'src/app/app.globals';\r\n\r\n@Component({\r\n  selector: 'login-page',\r\n  templateUrl: './login-page.html',\r\n  styleUrls: ['./login-page.css']\r\n})\r\nexport class LoginPageComponent {\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  dataSave(message: object) {\r\n    sessionStorage.setItem('logged', 'true');\r\n    alert('Welcome! ' + message)\r\n    this.router.navigate(['/admin-panel']);\r\n  }\r\n\r\n  async onClickSubmit(data: { login: string, password: string }) {\r\n    if (data.login == '' || data.password == '') {\r\n      alert('The login and password field must be filled in');\r\n    } else {\r\n      let loginUrl: string = baseApiUrls.baseApiurlUser + data.login + '/' + data.password;\r\n      await this.http.get(loginUrl).subscribe(data => this.dataSave(data), (error => alert('User not found')));\r\n    }    \r\n  } \r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n  <div class=\"loginBox\">\r\n    <h1>Project Blog</h1>\r\n    <form #userlogin=\"ngForm\" (ngSubmit)=\"onClickSubmit(userlogin.value)\">\r\n      <input type=\"text\" name=\"login\" placeholder=\"Login\" ngModel>\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" ngModel />\r\n      <button type=\"submit\">LOGIN</button>\r\n    </form>\r\n  </div>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}