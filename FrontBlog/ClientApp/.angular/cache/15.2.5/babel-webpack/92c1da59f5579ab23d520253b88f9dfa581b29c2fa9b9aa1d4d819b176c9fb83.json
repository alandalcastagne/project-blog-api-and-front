{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/aland/source/repos/ProjetoBlog/FrontBlog/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { baseApiUrls } from 'src/app/app.globals';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/app.functions\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginPageComponent {\n  constructor(http, router, loginService) {\n    this.http = http;\n    this.router = router;\n    this.loginService = loginService;\n  }\n  ngOnInit() {\n    this.loginService.checkIfUserIsLoggedIn();\n  }\n  dataSave(message) {\n    sessionStorage.setItem('logged', 'true');\n    alert('Welcome! ' + message);\n    this.router.navigate(['/admin-panel']);\n  }\n  onClickSubmit(data) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let loginUrl = baseApiUrls.baseApiurlUser + data.login + '/' + data.password;\n      yield _this.http.get(loginUrl).toPromise().subscribe(data => _this.dataSave(data), error => alert('User not found'));\n    })();\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoginService));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"login-page\"]],\n  decls: 12,\n  vars: 0,\n  consts: [[\"charset\", \"utf-8\"], [1, \"loginBox\"], [3, \"ngSubmit\"], [\"userlogin\", \"ngForm\"], [\"type\", \"text\", \"name\", \"login\", \"placeholder\", \"Login\", \"ngModel\", \"\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"Password\", \"ngModel\", \"\"], [\"type\", \"submit\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.onClickSubmit(_r0.value));\n      });\n      i0.ɵɵelement(8, \"input\", 4)(9, \"input\", 5);\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵtext(11, \"LOGIN\");\n      i0.ɵɵelementEnd()()()()();\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".loginBox[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  transform: translate(-50%, -50%);\\r\\n\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n  background: #57B8FF;\\r\\n  padding: 10px;\\r\\n  border: 1px solid black;\\r\\n\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: space-evenly;\\r\\n\\r\\n  border-radius: 10px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\r\\n    margin: 5px;\\r\\n    padding: 5px;\\r\\n    border: 1px solid black;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\nform[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\r\\n    border-radius: 5px;\\r\\n    margin-top: 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsU0FBUztFQUNULGdDQUFnQzs7RUFFaEMsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7Ozs7QUFJQTtFQUNFLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IsdUJBQXVCOztFQUV2QixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLDZCQUE2Qjs7RUFFN0IsbUJBQW1CO0FBQ3JCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWix1QkFBdUI7SUFDdkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGdCQUFnQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbkJveCB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG5cclxuXHJcbmZvcm0ge1xyXG4gIGJhY2tncm91bmQ6ICM1N0I4RkY7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xyXG5cclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG5mb3JtIGlucHV0e1xyXG4gICAgbWFyZ2luOiA1cHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxufVxyXG5cclxuZm9ybSBidXR0b24ge1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AAGA,SAASA,WAAW,QAAQ,qBAAqB;;;;;;AAQjD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,IAAgB,EAAUC,MAAc,EAAUC,YAA0B;IAA5E,SAAI,GAAJF,IAAI;IAAsB,WAAM,GAANC,MAAM;IAAkB,iBAAY,GAAZC,YAAY;EAAkB;EAEpGC,QAAQ;IACN,IAAI,CAACD,YAAY,CAACE,qBAAqB,EAAE;EAC3C;EAEAC,QAAQ,CAACC,OAAe;IACtBC,cAAc,CAACC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC;IACxCC,KAAK,CAAC,WAAW,GAAGH,OAAO,CAAC;IAC5B,IAAI,CAACL,MAAM,CAACS,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC;EACxC;EAEMC,aAAa,CAACC,IAAyC;IAAA;IAAA;MAC3D,IAAIC,QAAQ,GAAWhB,WAAW,CAACiB,cAAc,GAAGF,IAAI,CAACG,KAAK,GAAG,GAAG,GAAGH,IAAI,CAACI,QAAQ;MACpF,MAAM,KAAI,CAAChB,IAAI,CAACiB,GAAG,CAACJ,QAAQ,CAAC,CAACK,SAAS,EAAE,CAACC,SAAS,CAACP,IAAI,IAAI,KAAI,CAACP,QAAQ,CAACO,IAAI,CAAC,EAAGQ,KAAK,IAAIX,KAAK,CAAC,gBAAgB,CAAC,CAAE;IAAC;EAEvH;;AAlBWX,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCV/BC,4BAAM;MAEFA,0BAAwB;MAE5BA,iBAAO;MACPA,4BAAM;MAEwBA;QAAAA;QAAA;QAAA,OAAYA,2CAA8B;MAAA,EAAC;MACnEA,2BAA4D;MAE5DA,kCAAsB;MAAAA,sBAAK;MAAAA,iBAAS","names":["baseApiUrls","LoginPageComponent","constructor","http","router","loginService","ngOnInit","checkIfUserIsLoggedIn","dataSave","message","sessionStorage","setItem","alert","navigate","onClickSubmit","data","loginUrl","baseApiurlUser","login","password","get","toPromise","subscribe","error","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\login-page\\login-page.component.ts","C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\login-page\\login-page.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { baseApiUrls } from 'src/app/app.globals';\r\nimport { LoginService } from 'src/app/app.functions';\r\n\r\n@Component({\r\n  selector: 'login-page',\r\n  templateUrl: './login-page.html',\r\n  styleUrls: ['./login-page.css']\r\n})\r\nexport class LoginPageComponent {\r\n\r\n  constructor(private http: HttpClient, private router: Router, private loginService: LoginService) { }\r\n\r\n  ngOnInit() {\r\n    this.loginService.checkIfUserIsLoggedIn();\r\n  }\r\n\r\n  dataSave(message: object) {\r\n    sessionStorage.setItem('logged', 'true');\r\n    alert('Welcome! ' + message)\r\n    this.router.navigate(['/admin-panel']);\r\n  }\r\n\r\n  async onClickSubmit(data: { login: string, password: string }) {\r\n    let loginUrl: string = baseApiUrls.baseApiurlUser + data.login + '/' + data.password;\r\n    await this.http.get(loginUrl).toPromise().subscribe(data => this.dataSave(data), (error => alert('User not found')));\r\n    \r\n  } \r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n  <div class=\"loginBox\">\r\n    <form #userlogin=\"ngForm\" (ngSubmit)=\"onClickSubmit(userlogin.value)\">\r\n      <input type=\"text\" name=\"login\" placeholder=\"Login\" ngModel>\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" ngModel />\r\n      <button type=\"submit\">LOGIN</button>\r\n    </form>\r\n  </div>\r\n\r\n\r\n\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}