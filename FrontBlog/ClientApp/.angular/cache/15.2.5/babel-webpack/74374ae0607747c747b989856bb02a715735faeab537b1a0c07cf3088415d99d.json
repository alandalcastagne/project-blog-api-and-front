{"ast":null,"code":"var _class;\nvar AdminPanelComponent_1;\nimport { __decorate } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { GlobalVariables } from 'src/app/app.globals';\nlet AdminPanelComponent = AdminPanelComponent_1 = (_class = class AdminPanelComponent {\n  constructor(http, router, loginService) {\n    this.http = http;\n    this.router = router;\n    this.loginService = loginService;\n    this.posts = [];\n    http.get(GlobalVariables.getAllPostsWithCategorieAndDateApiUrl).subscribe(data => {\n      this.posts = data;\n    }, error => console.log(error));\n  }\n  ngOnInit() {\n    this.loginService.checkIfUserIsLoggedIn();\n  }\n  onClickSubmit(data) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    var categoryObj = {\n      \"name\": data.category\n    };\n    if (categoryObj.name == '') {\n      alert('You must fill in the category field');\n    } else {\n      this.http.post(GlobalVariables.registerCategoryApiUrl, categoryObj, {\n        headers: headers\n      }).subscribe(res => {\n        alert(\"Category \" + data.category + \"Registered\");\n      });\n    }\n  }\n  sendIdToApi(event) {\n    var target = event.target || event.srcElement || event.currentTarget;\n    var idAttr = target.attributes.id;\n    var value = idAttr.nodeValue;\n    AdminPanelComponent_1.idPost = value;\n  }\n  deletePost(event) {\n    var target = event.target;\n    var valueAttr = target.attributes.value;\n    var valueButton = valueAttr.nodeValue;\n    this.http.delete(GlobalVariables.deletePostByIdApiUrl + valueButton).subscribe({\n      next: data => {\n        this.status = 'Delete successful';\n        alert(this.status);\n        window.location.reload();\n      },\n      error: error => {\n        this.errorMessage = error.message;\n        console.error('There was an error!', error);\n      }\n    });\n  }\n}, _class.idPost = 0, _class);\nAdminPanelComponent = AdminPanelComponent_1 = __decorate([Component({\n  selector: 'admin-panel',\n  templateUrl: './admin-panel.html',\n  styleUrls: ['../../admin-panel-and-home-panel.css']\n})], AdminPanelComponent);\nexport { AdminPanelComponent };","map":{"version":3,"mappings":";;;AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,SAAS,QAAgB,eAAe;AAEjD,SAASC,eAAe,QAAqB,qBAAqB;AAS3D,IAAMC,mBAAmB,qCAAzB,MAAMA,mBAAmB;EAS9BC,YAAoBC,IAAgB,EAAUC,MAAc,EAAUC,YAA0B;IAA5E,SAAI,GAAJF,IAAI;IAAsB,WAAM,GAANC,MAAM;IAAkB,iBAAY,GAAZC,YAAY;IAP3E,UAAK,GAAY,EAAE;IAQxBF,IAAI,CAACG,GAAG,CAAUN,eAAe,CAACO,qCAAqC,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;MAAG,IAAI,CAACC,KAAK,GAAGD,IAAI;IAAE,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACjJ;EAEAG,QAAQ;IACN,IAAI,CAACT,YAAY,CAACU,qBAAqB,EAAE;EAC3C;EAEAC,aAAa,CAACP,IAA0B;IACtC,IAAIQ,OAAO,GAAG,IAAInB,WAAW,EAAE;IAC/BmB,OAAO,CAACC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;IAClD,IAAIC,WAAW,GAAG;MAChB,MAAM,EAAEV,IAAI,CAACW;KACd;IAED,IAAID,WAAW,CAACE,IAAI,IAAI,EAAE,EAAE;MAC1BC,KAAK,CAAC,qCAAqC,CAAC;KAC7C,MAAM;MACL,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAACvB,eAAe,CAACwB,sBAAsB,EAAEL,WAAW,EAAE;QAAEF,OAAO,EAAEA;MAAO,CAAE,CAAC,CAACT,SAAS,CAACiB,GAAG,IAAG;QAAGH,KAAK,CAAC,WAAW,GAAGb,IAAI,CAACW,QAAQ,GAAG,YAAY,CAAC;MAAC,CAAC,CAAC;;EAErK;EAEAM,WAAW,CAACC,KAA4D;IACtE,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM,IAAID,KAAK,CAACE,UAAU,IAAIF,KAAK,CAACG,aAAa;IACpE,IAAIC,MAAM,GAAGH,MAAM,CAACI,UAAU,CAACC,EAAE;IACjC,IAAIC,KAAK,GAAGH,MAAM,CAACI,SAAS;IAE5BC,qBAAmB,CAACC,MAAM,GAAGH,KAAK;EACpC;EAEAI,UAAU,CAACX,KAAqB;IAC9B,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;IACzB,IAAIW,SAAS,GAAGX,MAAM,CAACI,UAAU,CAACE,KAAK;IACvC,IAAIM,WAAW,GAAGD,SAAS,CAACJ,SAAS;IAErC,IAAI,CAAChC,IAAI,CAACsC,MAAM,CAACzC,eAAe,CAAC0C,oBAAoB,GAAGF,WAAW,CAAC,CACjEhC,SAAS,CAAC;MACTmC,IAAI,EAAElC,IAAI,IAAG;QACX,IAAI,CAACmC,MAAM,GAAG,mBAAmB;QACjCtB,KAAK,CAAC,IAAI,CAACsB,MAAM,CAAC;QAClBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC;MACDpC,KAAK,EAAEA,KAAK,IAAG;QACb,IAAI,CAACqC,YAAY,GAAGrC,KAAK,CAACsC,OAAO;QACjCrC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;KACD,CAAC;EAGN;GAvDc,aAAM,GAAW,CAAC;AAHrBV,mBAAmB,uCAN/BF,SAAS,CAAC;EACTmD,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,oBAAoB;EACjCC,SAAS,EAAE,CAAC,sCAAsC;CACnD,CAAC,GAEWnD,mBAAmB,CA2D/B;SA3DYA,mBAAmB","names":["HttpHeaders","Component","GlobalVariables","AdminPanelComponent","constructor","http","router","loginService","get","getAllPostsWithCategorieAndDateApiUrl","subscribe","data","posts","error","console","log","ngOnInit","checkIfUserIsLoggedIn","onClickSubmit","headers","append","categoryObj","category","name","alert","post","registerCategoryApiUrl","res","sendIdToApi","event","target","srcElement","currentTarget","idAttr","attributes","id","value","nodeValue","AdminPanelComponent_1","idPost","deletePost","valueAttr","valueButton","delete","deletePostByIdApiUrl","next","status","window","location","reload","errorMessage","message","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\admin-panel\\admin-panel.component.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { GlobalVariables, Post, Posts } from 'src/app/app.globals';\r\nimport { LoginService } from 'src/app/app.functions';\r\n\r\n@Component({\r\n  selector: 'admin-panel',\r\n  templateUrl: './admin-panel.html',\r\n  styleUrls: ['../../admin-panel-and-home-panel.css']\r\n})\r\n\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  public posts: Posts[] = [];\r\n  public static idPost: number = 0;\r\n  public status: any;\r\n  public errorMessage: any;\r\n  public postDescription: any;\r\n  post: Post | undefined;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private loginService: LoginService) {\r\n    http.get<Posts[]>(GlobalVariables.getAllPostsWithCategorieAndDateApiUrl).subscribe(data => { this.posts = data; }, error => console.log(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginService.checkIfUserIsLoggedIn();\r\n  }\r\n\r\n  onClickSubmit(data: { category: string }) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    var categoryObj = {\r\n      \"name\": data.category,\r\n    }\r\n\r\n    if (categoryObj.name == '') {\r\n      alert('You must fill in the category field')\r\n    } else {\r\n      this.http.post(GlobalVariables.registerCategoryApiUrl, categoryObj, { headers: headers }).subscribe(res => { alert(\"Category \" + data.category + \"Registered\") });   \r\n    } \r\n  }\r\n\r\n  sendIdToApi(event: { target: any; srcElement: any; currentTarget: any; }) {\r\n    var target = event.target || event.srcElement || event.currentTarget;\r\n    var idAttr = target.attributes.id;\r\n    var value = idAttr.nodeValue;\r\n\r\n    AdminPanelComponent.idPost = value;\r\n  }\r\n\r\n  deletePost(event: {target: any;}) {\r\n    var target = event.target;\r\n    var valueAttr = target.attributes.value;\r\n    var valueButton = valueAttr.nodeValue;\r\n\r\n    this.http.delete(GlobalVariables.deletePostByIdApiUrl + valueButton)\r\n      .subscribe({\r\n        next: data => {\r\n          this.status = 'Delete successful';\r\n          alert(this.status);\r\n          window.location.reload();\r\n        },\r\n        error: error => {\r\n          this.errorMessage = error.message;\r\n          console.error('There was an error!', error);\r\n        }\r\n      });\r\n\r\n      \r\n  }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}