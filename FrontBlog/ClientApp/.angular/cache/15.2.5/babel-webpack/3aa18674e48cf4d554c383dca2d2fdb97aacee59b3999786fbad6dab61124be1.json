{"ast":null,"code":"import { GlobalVariables } from 'src/app/app.globals';\nimport { HomePanelComponent } from '../home-panel/home-panel.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class ReadPostComponent {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.PostId = 0;\n    this.PostId = HomePanelComponent.idPost;\n  }\n  ngOnInit() {\n    if (!this.PostId) {\n      this.router.navigate(['/home-panel']);\n    }\n    this.getPostById().subscribe(data => this.post = {\n      id: data.id,\n      title: data.title,\n      description: data.description,\n      date: data.date,\n      categoryFK: data.categoryFK,\n      category: data.category\n    });\n    this.postDescription = this.post?.description;\n  }\n  getPostById() {\n    return this.http.get(GlobalVariables.getPostByIdApiUrl + this.PostId);\n  }\n}\nReadPostComponent.ɵfac = function ReadPostComponent_Factory(t) {\n  return new (t || ReadPostComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n};\nReadPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReadPostComponent,\n  selectors: [[\"read-post\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[\"charset\", \"utf-8\"], [1, \"postWrapper\"], [1, \"postDescription\", 3, \"innerHtml\"]],\n  template: function ReadPostComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\")(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 0)(3, \"title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"body\")(5, \"div\", 1)(6, \"h1\");\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"div\", 2);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.post == null ? null : ctx.post.title);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHtml\", ctx.postDescription, i0.ɵɵsanitizeHtml);\n    }\n  },\n  styles: [\".postWrapper[_ngcontent-%COMP%]{\\r\\n    max-width: 900px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n  .postWrapper[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    background: white;\\r\\n    min-height: 500px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVhZC1wb3N0L3JlYWQtcG9zdC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztBQUNsQjs7RUFFRTtJQUNFLFdBQVc7SUFDWCxpQkFBaUI7SUFDakIsaUJBQWlCO0VBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiLnBvc3RXcmFwcGVye1xyXG4gICAgbWF4LXdpZHRoOiA5MDBweDtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG59XHJcblxyXG4gIC5wb3N0V3JhcHBlciB0ZXh0YXJlYSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xyXG4gICAgbWluLWhlaWdodDogNTAwcHg7XHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,eAAe,QAA0B,qBAAqB;AACvE,SAASC,kBAAkB,QAAQ,oCAAoC;;;;AAQvE,OAAM,MAAOC,iBAAiB;EAK5BC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,SAAI,GAAJD,IAAI;IAAsB,WAAM,GAANC,MAAM;IAH7C,WAAM,GAAW,CAAC;IAIvB,IAAI,CAACC,MAAM,GAAGL,kBAAkB,CAACM,MAAM;EACzC;EAGAC,QAAQ;IACN,IAAI,CAAC,IAAI,CAACF,MAAM,EAAE;MAChB,IAAI,CAACD,MAAM,CAACI,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;;IAGvC,IAAI,CAACC,WAAW,EAAE,CAACC,SAAS,CAAEC,IAAU,IAAK,IAAI,CAACC,IAAI,GAAG;MACvDC,EAAE,EAAEF,IAAI,CAACE,EAAE;MACXC,KAAK,EAAEH,IAAI,CAACG,KAAK;MACjBC,WAAW,EAAEJ,IAAI,CAACI,WAAW;MAC7BC,IAAI,EAAEL,IAAI,CAACK,IAAI;MACfC,UAAU,EAAEN,IAAI,CAACM,UAAU;MAC3BC,QAAQ,EAAEP,IAAI,CAACO;KAChB,CAAC;IAEF,IAAI,CAACC,eAAe,GAAG,IAAI,CAACP,IAAI,EAAEG,WAAW;EAC/C;EAEAN,WAAW;IACT,OAAO,IAAI,CAACN,IAAI,CAACiB,GAAG,CAAOrB,eAAe,CAACsB,iBAAiB,GAAG,IAAI,CAAChB,MAAM,CAAC;EAC7E;;AA7BWJ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,4BAAM;MAEFA,0BAAwB;MAE5BA,iBAAO;MACPA,4BAAM;MAEEA,YAAe;MAAAA,iBAAK;MACxBA,yBAAiE;MACnEA,iBAAM;;;MAFAA,eAAe;MAAfA,8DAAe;MACUA,eAA6B;MAA7BA,kEAA6B","names":["GlobalVariables","HomePanelComponent","ReadPostComponent","constructor","http","router","PostId","idPost","ngOnInit","navigate","getPostById","subscribe","data","post","id","title","description","date","categoryFK","category","postDescription","get","getPostByIdApiUrl","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\read-post\\read-post.component.ts","C:\\Users\\aland\\source\\repos\\ProjetoBlog\\FrontBlog\\ClientApp\\src\\app\\read-post\\read-post.html"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Component} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { GlobalVariables, Categories, Post } from 'src/app/app.globals';\r\nimport { HomePanelComponent } from '../home-panel/home-panel.component';\r\n\r\n\r\n@Component({\r\n  selector: 'read-post',\r\n  templateUrl: './read-post.html',\r\n  styleUrls: ['./read-post.css']\r\n})\r\nexport class ReadPostComponent {\r\n  post: Post | undefined;\r\n  public PostId: number = 0;\r\n  public postDescription: any;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    this.PostId = HomePanelComponent.idPost;\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    if (!this.PostId) {\r\n      this.router.navigate(['/home-panel']);\r\n    }\r\n\r\n    this.getPostById().subscribe((data: Post) => this.post = {\r\n      id: data.id,\r\n      title: data.title,\r\n      description: data.description,\r\n      date: data.date,\r\n      categoryFK: data.categoryFK,\r\n      category: data.category,\r\n    });\r\n\r\n    this.postDescription = this.post?.description;\r\n  }\r\n\r\n  getPostById() {\r\n    return this.http.get<Post>(GlobalVariables.getPostByIdApiUrl + this.PostId);\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset=\"utf-8\" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n  <div class=\"postWrapper\">\r\n    <h1>{{post?.title}}</h1>\r\n    <div class=\"postDescription\" [innerHtml]=\"postDescription\"></div>\r\n  </div>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}